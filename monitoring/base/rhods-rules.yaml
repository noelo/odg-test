apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: k8s
    role: recording-rules
    app: rhods
  name: rhods-rules
spec:
  groups:
  - name: rhods-usage.rules
    rules:
    - record: cluster:usage:consumption:rhods:cpu:seconds:rate1h
      expr: sum(rate(container_cpu_usage_seconds_total{container="",pod=~"jupyter-nb.*",namespace="rhods-notebooks"}[1h]))
    - record: cluster:usage:consumption:rhods:pod:up
      expr: count(kube_pod_container_status_ready{namespace="rhods-notebooks", pod=~"jupyter-nb.*",container=~"jupyter-nb-.*"}==1)
    - record: cluster:usage:consumption:rhods:active_users
      expr: count(kube_statefulset_replicas{namespace=~"rhods-notebooks", statefulset=~"jupyter-nb-.*"} ==1)
      labels:
        instance: jupyter-notebooks
    - record: cluster:usage:consumption:rhods:cpu_requests_runtime
      expr: sum(kube_pod_container_resource_requests{namespace="rhods-notebooks",resource="cpu", container=~"jupyter-nb-.*"} * on(pod) kube_pod_status_phase{phase="Running", namespace="rhods-notebooks"})
    - record: cluster:usage:consumption:rhods:cpu_limits_runtime
      expr: sum(kube_pod_container_resource_limits{namespace="rhods-notebooks",resource="cpu", container=~"jupyter-nb-.*"} * on(pod) kube_pod_status_phase{phase="Running", namespace="rhods-notebooks"})
